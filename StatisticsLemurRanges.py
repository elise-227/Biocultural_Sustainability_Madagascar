# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2023-01-27 13:40:59
"""
import arcpy
from sys import argv

#arcpy.env.workspace = "Z:\bass\clean_data"
arcpy.env.overwriteOutput = True

lemur_dict = {"Allocebus_trichotis":"0.1802 Kilometers", 
    "Eulemur_albifrons":"0.2034 Kilometers",
    "Eulemur_rubriventer":"0.2491 Kilometers",
    "Hapalemur_griseus":"0.1197 Kilometers",
    "Lepilemur_saeli":"0.0437 Kilometers",
    "Microcebus_mittermeiri":"0.0778 Kilometers",
    "Propithecus_candidus":"0.3643 Kilometers",
    "Cheirogaleus_crossleyi":"0.0892 Kilometers",
    "Avahi_laniger":"0.0564 Kilometers"}

lemur_list = list(lemur_dict.keys())
#keys = lemur_dict["Allocebus_trichotis"]

for lemurs in lemur_list:
    Lemur = lemurs
    def Buffer(Lemur_Range=lemur_dict[lemurs], Lemur=Lemur, forestht_trans_Lemur_csv=fr"Z:\bass\outputfeb2_7th\forestht_trans{Lemur}.csv", TRI_trans_Lemur_csv=fr"Z:\bass\outputfeb2_7th\TRI_trans{Lemur}.csv", elev_trans_Lemur_csv=fr"Z:\bass\outputfeb2_7th\elev_trans{Lemur}.csv", sumFL_trans_Lemur_csv=fr"Z:\bass\outputfeb2_7th\sumFL_trans{Lemur}.csv", sumF_trans_Lemur_csv=fr"Z:\bass\outputfeb2_7th\sumF_trans{Lemur}.csv", buffer_Lemur_csv=fr"Z:\bass\outputfeb2_7th\buffer_{Lemur}.csv"):  # Statistics based on Lemur Ranges
    
        # Model Environment settings
        with arcpy.EnvManager(scratchWorkspace=r"Z:\bass\scratch\scratch.gdb"):
            LEMUR_POINTS_FINAL = r"Z:\bass\clean_data\LEMUR_POINTS_7THSITE"
            
            BassConnections_TRI_StudyArea_tiff = arcpy.Raster(r"Z:\bass\clean_data\BassConnections_TRI_StudyArea.tiff")
            Canopy_Height = arcpy.Raster(r"Z:\bass\clean_data\Forest_height_2019_SAFR.tif")
            ASTGTMV003_S15E049_dem_tif = arcpy.Raster(r"Z:\bass\clean_data\ASTGTMV003_S15E049_dem.tif")
            Forest_Loss = arcpy.Raster(r"Z:\bass\clean_data\Hansen_GFC-2021-v1.9_lossyear_10S_040E.tif")
            Input_true_raster_or_constant_value = 1
            Input_false_raster_or_constant_value = 0
            Forest2022_tif = arcpy.Raster(r"Z:\bass\clean_data\Forest2022.tif")
    
            # Process: Pairwise Buffer (Pairwise Buffer) (analysis)
            Buffer_Output = fr"Z:\bass\lemur_occup.gdb\buffer_{Lemur}"
            arcpy.analysis.PairwiseBuffer(in_features=LEMUR_POINTS_FINAL, out_feature_class=Buffer_Output, buffer_distance_or_field=Lemur_Range, dissolve_option="LIST", dissolve_field=["Transect", "Site"], method="PLANAR", max_deviation="0 DecimalDegrees")
    
            # Process: Zonal Statistics as Table (Zonal Statistics as Table) (ia)
            Canopy_height_within_Range = fr"Z:\bass\lemur_occup.gdb\forest_ht_trans_{Lemur}"
            arcpy.ia.ZonalStatisticsAsTable(in_zone_data=Buffer_Output, zone_field="OBJECTID", in_value_raster=Canopy_Height, out_table=Canopy_height_within_Range, ignore_nodata="DATA", statistics_type="MEAN", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
            #Zonal_Statistics_as_Table.save(table)
    
    
            # Process: Export Table (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=Canopy_height_within_Range, out_table=forestht_trans_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
            # Process: Export Table (2) (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=Buffer_Output, out_table=buffer_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
            # Process: Zonal Statistics as Table (3) (Zonal Statistics as Table) (ia)
           
            TRI_within_Range = fr"Z:\bass\lemur_occup.gdb\TRI_trans_{Lemur}"
            arcpy.ia.ZonalStatisticsAsTable(in_zone_data=Buffer_Output, zone_field="OBJECTID", in_value_raster=BassConnections_TRI_StudyArea_tiff, out_table=TRI_within_Range, ignore_nodata="DATA", statistics_type="MEAN", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
            #.save(Zonal_Statistics_as_Table_3_)
    
    
            # Process: Export Table (3) (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=TRI_within_Range, out_table=TRI_trans_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
            # Process: Zonal Statistics as Table (4) (Zonal Statistics as Table) (ia)
            Elev_within_Range = fr"Z:\bass\lemur_occup.gdb\elev_tran_{Lemur}"
            arcpy.ia.ZonalStatisticsAsTable(in_zone_data=Buffer_Output, zone_field="OBJECTID", in_value_raster=ASTGTMV003_S15E049_dem_tif, out_table=Elev_within_Range, ignore_nodata="DATA", statistics_type="MEAN", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
            #.save(Zonal_Statistics_as_Table_4_)
    
    
            # Process: Export Table (4) (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=Elev_within_Range, out_table=elev_trans_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
            # Process: Con (Con) (sa)
            Forest_Loss_22 = "Z:\\bass\\scratch\\scratch.gdb\\Forest_Loss"
            Con = Forest_Loss_22
            Forest_Loss_22 = arcpy.sa.Con(in_conditional_raster=Forest_Loss, in_true_raster_or_constant=Input_true_raster_or_constant_value, in_false_raster_or_constant=Input_false_raster_or_constant_value, where_clause="VALUE > 0")
            Forest_Loss_22.save(Con)
    
    
            # Process: Zonal Statistics as Table (2) (Zonal Statistics as Table) (ia)
            Sum_of_Lost_Forest_in_Range = fr"Z:\bass\lemur_occup.gdb\forest_loss_trans_{Lemur}"
            arcpy.ia.ZonalStatisticsAsTable(in_zone_data=Buffer_Output, zone_field="OBJECTID", in_value_raster=Forest_Loss_22, out_table=Sum_of_Lost_Forest_in_Range, ignore_nodata="DATA", statistics_type="SUM", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
            #.save(Zonal_Statistics_as_Table_2_)
    
    
            # Process: Export Table (5) (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=Sum_of_Lost_Forest_in_Range, out_table=sumFL_trans_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
            # Process: Zonal Statistics as Table (5) (Zonal Statistics as Table) (ia)
            Sum_of_Forest_in_Range_2_ = fr"Z:\bass\lemur_occup.gdb\forest_trans_{Lemur}"
            arcpy.ia.ZonalStatisticsAsTable(in_zone_data=Buffer_Output, zone_field="OBJECTID", in_value_raster=Forest2022_tif, out_table=Sum_of_Forest_in_Range_2_, ignore_nodata="DATA", statistics_type="SUM", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
            #.save(Zonal_Statistics_as_Table_5_)
    
    
            # Process: Export Table (6) (Export Table) (conversion)
            arcpy.conversion.ExportTable(in_table=Sum_of_Forest_in_Range_2_, out_table=sumF_trans_Lemur_csv, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", sort_field=[])
    
    if __name__ == '__main__':
        # Global Environment settings
        with arcpy.EnvManager(workspace=r"Z:\bass\lemur_occup.gdb"):
            Buffer(*argv[1:])
